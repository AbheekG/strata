!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BLOCK_SIZE	common.h	14;"	d
C_SRCS	Makefile	/^C_SRCS := common.c sync.c async.c$/;"	m
DPDK_DIR	Makefile	/^DPDK_DIR := $(abspath $(CURDIR)\/..\/..\/..\/lib\/dpdk-$(DPDK_VER)\/x86_64-native-linuxapp-gcc)$/;"	m
DPDK_VER	Makefile	/^DPDK_VER := 16.11$/;"	m
OBJS	Makefile	/^OBJS=$(C_SRCS:.c=.o)$/;"	m
Q_DEPTH	async.c	16;"	d	file:
SPDK_ROOT_DIR	Makefile	/^SPDK_ROOT_DIR := $(abspath $(CURDIR)\/..\/..\/..\/lib\/spdk)$/;"	m
__libspdk_async_h__	async.h	2;"	d
__libspdk_h__	common.h	2;"	d
__libspdk_sync_h__	sync.h	2;"	d
async_data	async.c	/^} async_data;$/;"	v	typeref:struct:spdk_async_data	file:
attach_cb	common.c	/^void attach_cb(void *cb_ctx, const struct spdk_nvme_transport_id *trid,$/;"	f
blockno	async.c	/^	unsigned int blockno;$/;"	m	struct:spdk_async_io	file:
buffer	async.c	/^	char *buffer;$/;"	m	struct:spdk_async_io	file:
buffer	sync.h	/^	char *buffer;$/;"	m	struct:spdk_sync_io
completed	async.c	/^	unsigned int issued, completed;$/;"	m	struct:spdk_async_data	file:
ctrlr	common.h	/^	struct spdk_nvme_ctrlr	*ctrlr;$/;"	m	struct:ctrlr_entry	typeref:struct:ctrlr_entry::spdk_nvme_ctrlr
ctrlr	common.h	/^	struct spdk_nvme_ctrlr	*ctrlr;$/;"	m	struct:ns_entry	typeref:struct:ns_entry::spdk_nvme_ctrlr
ctrlr_entry	common.h	/^struct ctrlr_entry {$/;"	s
done	sync.h	/^	volatile int done;$/;"	m	struct:spdk_sync_io
ealargs	common.c	/^static char *ealargs[] = {$/;"	v	file:
g_controllers	common.c	/^struct ctrlr_entry *g_controllers = NULL;$/;"	v	typeref:struct:ctrlr_entry
g_namespaces	common.c	/^struct ns_entry *g_namespaces = NULL;$/;"	v	typeref:struct:ns_entry
guest_buffer	async.c	/^	char *guest_buffer;$/;"	m	struct:spdk_async_io	file:
guest_buffer	sync.h	/^	char *guest_buffer;$/;"	m	struct:spdk_sync_io
issued	async.c	/^	unsigned int issued, completed;$/;"	m	struct:spdk_async_data	file:
libspdk_exit	common.c	/^void libspdk_exit(void) {$/;"	f
libspdk_get_n_lbas	common.c	/^unsigned int libspdk_get_n_lbas(void) {$/;"	f
libspdk_init	common.c	/^int libspdk_init(void) {$/;"	f
main	rw.c	/^int main(int argc, char** argv)$/;"	f
n_blocks	async.c	/^	unsigned int n_blocks;$/;"	m	struct:spdk_async_io	file:
name	common.h	/^	char			name[1024];$/;"	m	struct:ctrlr_entry
next	common.h	/^	struct ctrlr_entry	*next;$/;"	m	struct:ctrlr_entry	typeref:struct:ctrlr_entry::ctrlr_entry
next	common.h	/^	struct ns_entry		*next;$/;"	m	struct:ns_entry	typeref:struct:ns_entry::ns_entry
ns	common.h	/^	struct spdk_nvme_ns	*ns;$/;"	m	struct:ns_entry	typeref:struct:ns_entry::spdk_nvme_ns
ns_entry	common.h	/^struct ns_entry {$/;"	s
outstanding_writes	async.c	/^	unsigned int outstanding_writes;$/;"	m	struct:spdk_async_data	file:
probe_cb	common.c	/^probe_cb(void *cb_ctx, const struct spdk_nvme_transport_id *trid,$/;"	f
qpair	common.h	/^	struct spdk_nvme_qpair  *qpair;$/;"	m	struct:ns_entry	typeref:struct:ns_entry::spdk_nvme_qpair
register_ns	common.c	/^void register_ns(struct spdk_nvme_ctrlr *ctrlr, struct spdk_nvme_ns *ns) {$/;"	f
size	async.c	/^	int size;$/;"	m	struct:spdk_async_io	file:
size	sync.h	/^	int size;$/;"	m	struct:spdk_sync_io
spdk_async_data	async.c	/^static struct spdk_async_data {$/;"	s	file:
spdk_async_get_n_lbas	async.c	/^unsigned int spdk_async_get_n_lbas(void) {$/;"	f
spdk_async_io	async.c	/^struct spdk_async_io {$/;"	s	file:
spdk_async_io_exit	async.c	/^void spdk_async_io_exit(void)$/;"	f
spdk_async_io_init	async.c	/^int spdk_async_io_init(void)$/;"	f
spdk_async_io_read	async.c	/^int spdk_async_io_read(uint8_t *guest_buffer, uint32_t blockno, uint32_t io_size,$/;"	f
spdk_async_io_read_callback	async.c	/^static void spdk_async_io_read_callback(void *arg,$/;"	f	file:
spdk_async_io_write	async.c	/^int spdk_async_io_write(uint8_t *guest_buffer, uint32_t blockno, uint32_t io_size,$/;"	f
spdk_async_io_write_callback	async.c	/^static void spdk_async_io_write_callback(void *arg,$/;"	f	file:
spdk_process_completions	async.c	/^int spdk_process_completions(void)$/;"	f
spdk_sync_get_n_lbas	sync.c	/^unsigned int spdk_sync_get_n_lbas(void) {$/;"	f
spdk_sync_io	sync.h	/^struct spdk_sync_io {$/;"	s
spdk_sync_io_exit	sync.c	/^void spdk_sync_io_exit(void) { libspdk_exit(); }$/;"	f
spdk_sync_io_init	sync.c	/^int spdk_sync_io_init(void) { return libspdk_init(); }$/;"	f
spdk_sync_io_read	sync.c	/^int spdk_sync_io_read(uint8_t *guest_buffer, uint32_t blockno, uint32_t io_size,$/;"	f
spdk_sync_io_read_callback	sync.c	/^static void spdk_sync_io_read_callback(void *arg,$/;"	f	file:
spdk_sync_io_write	sync.c	/^int spdk_sync_io_write(uint8_t *guest_buffer, uint32_t blockno, uint32_t io_size,$/;"	f
spdk_sync_io_write_callback	sync.c	/^static void spdk_sync_io_write_callback($/;"	f	file:
to_decrement	async.c	/^	unsigned int *to_decrement;$/;"	m	struct:spdk_async_io	file:
upper_power_of_two	common.c	/^unsigned long upper_power_of_two(unsigned int v) {$/;"	f
user_arg	async.c	/^	void* user_arg;$/;"	m	struct:spdk_async_io	file:
user_arg	sync.h	/^	void* user_arg;$/;"	m	struct:spdk_sync_io
user_cb	async.c	/^	void(* user_cb)(void*);$/;"	m	struct:spdk_async_io	file:
user_cb	sync.h	/^	void(* user_cb)(void*);$/;"	m	struct:spdk_sync_io
